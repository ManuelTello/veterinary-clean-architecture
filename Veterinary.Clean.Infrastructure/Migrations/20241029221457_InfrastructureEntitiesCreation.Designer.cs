// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Veterinary.Clean.Infrastructure.Data;

#nullable disable

namespace Veterinary.Clean.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDatabaseContext))]
    [Migration("20241029221457_InfrastructureEntitiesCreation")]
    partial class InfrastructureEntitiesCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.Consultation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Annotations")
                        .HasColumnType("longtext")
                        .HasColumnName("annotations")
                        .HasColumnOrder(4);

                    b.Property<int>("ConsultationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("type_of_consultation")
                        .HasColumnOrder(5);

                    b.Property<string>("Content")
                        .HasColumnType("longtext")
                        .HasColumnName("content")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_created")
                        .HasColumnOrder(2);

                    b.Property<Guid>("PetId")
                        .HasColumnType("char(36)")
                        .HasColumnName("pet_id")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.HasIndex("ConsultationTypeId");

                    b.HasIndex("PetId");

                    b.ToTable("consultations");
                });

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.ConsultationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("type")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("consultation_type");
                });

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("AlternativePhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("alternative_phone_number")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("DateAddedToSystem")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_added_to_system")
                        .HasColumnOrder(6);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("email")
                        .HasColumnOrder(3);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("first_name")
                        .HasColumnOrder(1);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("last_name")
                        .HasColumnOrder(2);

                    b.Property<string>("MainPhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("main_phone_number")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("owners");
                });

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.OwnerPet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)")
                        .HasColumnName("owner_id")
                        .HasColumnOrder(1);

                    b.Property<Guid>("PetId")
                        .HasColumnType("char(36)")
                        .HasColumnName("pet_id")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("PetId");

                    b.ToTable("owers_pets");
                });

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Breed")
                        .HasColumnType("longtext")
                        .HasColumnName("breed")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("DateAddedToSystem")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("date_added_to_system")
                        .HasColumnOrder(5);

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth")
                        .HasColumnOrder(3);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name")
                        .HasColumnOrder(1);

                    b.Property<int>("Weight")
                        .HasColumnType("int")
                        .HasColumnName("weight")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("pets");
                });

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.Consultation", b =>
                {
                    b.HasOne("Veterinary.Clean.Infrastructure.Entities.ConsultationType", "ConsultationType")
                        .WithMany("Consultations")
                        .HasForeignKey("ConsultationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Veterinary.Clean.Infrastructure.Entities.Pet", "Pet")
                        .WithMany("Consultations")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConsultationType");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.OwnerPet", b =>
                {
                    b.HasOne("Veterinary.Clean.Infrastructure.Entities.Owner", "Owner")
                        .WithMany("OwnersPets")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Veterinary.Clean.Infrastructure.Entities.Pet", "Pet")
                        .WithMany("OwnersPets")
                        .HasForeignKey("PetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");

                    b.Navigation("Pet");
                });

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.ConsultationType", b =>
                {
                    b.Navigation("Consultations");
                });

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.Owner", b =>
                {
                    b.Navigation("OwnersPets");
                });

            modelBuilder.Entity("Veterinary.Clean.Infrastructure.Entities.Pet", b =>
                {
                    b.Navigation("Consultations");

                    b.Navigation("OwnersPets");
                });
#pragma warning restore 612, 618
        }
    }
}
